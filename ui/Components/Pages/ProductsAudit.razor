@page "/products-audit"

@using ui.Dtos.Product

@rendermode InteractiveServer

@inject HttpClient Http

<PageTitle>Auditoría de productos</PageTitle>

<h1>Auditoría de Productos</h1>

@if (products == null)
{
    <p><em>Cargando...</em></p>
}
else
{
    <table class="table">
    <thead>
        <tr>
            <th>Identificador</th>
            <th>Nombre</th>
            <th>Precio</th>
            <th>Stock</th>
            <th>Fecha de versión</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var product in products)
            {
                ProductAuditDto currentProduct = product;
                <tr>
                    <td>@product.Id</td>
                    <td>@product.Name</td>
                    <td>@product.Price</td>
                    <td>@product.Stock</td>
                    <td>@product.CreatedOn</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private ProductAuditDto[]? products;

    protected override async Task OnInitializedAsync()
    {
        await LoadProductsAsync();
    }

    private async Task LoadProductsAsync()
    {
        try
        {
            products = await Http.GetFromJsonAsync<ProductAuditDto[]>("/api/product/auditories?IsDescending=true");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error al obtener los productos: {ex.Message}");
        }
    }

}
